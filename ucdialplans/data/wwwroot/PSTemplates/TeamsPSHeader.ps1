<#
.SYNOPSIS
A script to automatically create custom normalization rules for a Microsoft Teams Enterprise Voice deployment.

.DESCRIPTION
Automates the creation of Microsoft Teams Enterprise Voice dialplans/voice routes/policies etc. for various countries.

This script generated for {strLocationName} {strNPANXX}

.PARAMETER OverrideAdminDomain
OPTIONAL The FQDN your Office365 tenant. Use if your admin account is not in the same domain as your tenant (ie. doesn't use a @tenantname.onmicrosoft.com address)

.PARAMETER PSTNGateway
OPTIONAL The FQDN of a PSTN gateway to apply the script to.
If a value is not provided and multiple PSTN gateways exist, script will ask during execution.

.PARAMETER DPOnly
OPTIONAL. Only create dial plan
This option is useful for when all required routes/PSTN usages already exist, and you require separate dialplans for different groups.
Command line only option.

.EXAMPLE
.\{strFileName}
Runs the script in interactive mode. Script will prompt user for information when required.

.LINK
https://ucken.blogspot.com/2012/01/complete-guide-to-lync-optimizer.html

.NOTES
 -Works on Microsoft Teams environments with Enterprise Voice

Generated by UCDialPlans.com v.{cVersion} on {CurrentDate}
Copyright {strCopyrightYear} by Ken Lasko. Do not reproduce without permission.
https://www.ucdialplans.com
https://ucken.blogspot.com
You must read and abide by the terms of service at https://www.ucdialplans.com/termsofservice.htm

To import the rules into Microsoft Teams, please save this file as a .ps1 (Powershell script). 
Run the program from Microsoft Teams Powershell by typing .\{strFileName} 
#>


# The below settings are for applying command line options for unattended script application
param (
	# Input the PSTN Gateway name. Only necessary if multiple PSTN gateways are assigned to a mediation pool
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[string] $PSTNGateway,

	# Create only a dial plan. No routes/PSTN usages etc.
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[switch] $DPOnly,

	# Input the OverrideAdminDomain. Use if you normally have to enter your onmicrosoft.com domain name when signing onto O365
	[Parameter(ValueFromPipeline = $False, ValueFromPipelineByPropertyName = $True)]
	[ValidateNotNullOrEmpty()]
	[string] $OverrideAdminDomain
)

# $ErrorActionPreference can be set to SilentlyContinue, Continue, Stop, or Inquire for troubleshooting purposes
$Error.Clear()
$ErrorActionPreference = 'SilentlyContinue'

Try {
	Connect-MicrosoftTeams
}
Catch {
	Write-Warning 'Microsoft Teams PowerShell module not installed. Please install via Install-Module MicrosoftTeams, then run the script again.'
	Break
}

