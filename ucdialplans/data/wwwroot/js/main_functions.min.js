var strSelectedRegion, strOriginalRegion, strNational, strRuleSuffix, InputValid, Message, strLangID; const cCanadaProv = "AB,BC,MB,NB,NL,NT,NS,NU,ON,PE,QC,SK,YT", cUSStates = "AL,AK,AS,AZ,AR,CA,CO,CT,DE,DC,FM,FL,GA,GU,HI,ID,IL,IN,IA,KS,KY,LA,ME,MH,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,MP,OH,OK,OR,PW,PA,PR,RI,SC,SD,TN,TX,UT,VT,VI,VA,WA,WV,WI,WY"; function report_popup(e) { window.open("", "formpopup", "toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,dependent=0,resizable=1,width=1200,height=1200,left=200,top=10"), e.target = "formpopup" } function history_popup(e) { window.open("", "formpopup", "toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,dependent=0,resizable=1,width=1100,height=900,left=200,top=50"), e.target = "formpopup" } function AreaCodeEntry() { var e, t, l = document.getElementById("NPADrop"); for (document.getElementById("NPAType"); l.options.length > 0;)l.remove(0); document.getElementById("RuleBase").value = "", strOriginalRegion = "", strSelectedRegion = "", (e = new XMLHttpRequest).onreadystatechange = function () { if (4 == e.readyState && 200 == e.status) { var n = e.responseText; if ((n = n.replace(/^\s+|\s+$/g, "")).length > 0) { var a = n.split("\n"); for (i = 0, strOriginalRegion = strSelectedRegion = a[0].split(",")[2].replace(/[ \r\n]/gi, ""); i < a.length; i++)strRegionID = (t = a[i].split(","))[0], strAreaCode = t[1], strRegion = t[2], l.options[l.options.length] = new Option(strAreaCode + " - " + strRegion, strRegionID); UpdateRuleBase(), UpdateSampleRule() } else l.options[l.options.length] = new Option("No Area Code Found"), document.getElementById("SampleRule").innerHTML = document.InputForm.CountryID.value + "-NoAreaCodeFound" } }, e.open("GET", "QueryDB.cshtml?Query=AreaCodeDrop&ID=" + document.InputForm.Country.value + "&Condition1=" + document.InputForm.NPAType.value, !0), e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.send() } function CalcRegexRange() { var e = document.getElementById("Regex_FirstNum").value, t = document.getElementById("Regex_LastNum").value, l = new XMLHttpRequest; l.open("GET", "https://www.ucdialplans.com/regexrangeapi/?first=" + e + "&last=" + t), l.responseType = "json", l.send(), l.onload = function () { var e = l.response; 200 == l.status ? document.getElementById("RegexResults").innerHTML = e.data.regex : document.getElementById("RegexResults").innerHTML = e.error.detail } } function CheckAccessCode(e) { if ("" != e.value) { var t = /^\d{1,6}$/; null != e.value.match(t) ? (e.value = e.value.match(t), e.style.border = "1px solid #ccc") : (e.style.border = "2px solid red", ErrorPopup("Value must be numeric and between 1 and 6 digits"), e.value = "", e.focus()) } } function CheckCallID(e) { var t = e.value; if ("" != t) { var l = /^(\#|\*)?\d{1,4}$/; return null != t.match(l) || "" == t || "Block ID code" == t ? (t = t.match(l), e.style.border = "1px solid #ccc", document.InputForm.BlockCallID.checked = !0, !0) : (e.style.border = "2px solid red", ErrorPopup("Caller ID Block code must be between 1 and 4 digits long"), e.value = "", e.focus(), document.InputForm.BlockCallID.checked = !1, !1) } } function CheckCallPark(e, t) { var l = e.value, n = t.value; if ("" != l && "Start" != l && "End" != l) { if (document.InputForm.CallPark.checked = !0, null != l.match(/^(([\*|#]?[1-9]\d{0,7})|([1-9]\d{0,8}))$/)) { if ("" != l && "" != n) { if ("CallParkEnd" == e.name) { var a = l; l = n, n = a } n < l && ($.magnificPopup.open({ items: { src: "<div class='error-popup'><H4><strong>ERROR</strong></H4><P>Call Park Start must be less than Call Park End</p></div>", type: "inline" }, closeOnContentClick: !0 }), e.value = "", e.focus(), document.InputForm.CallPark.checked = !1), l.length != n.length && "Start" != n && "End" != n && ($.magnificPopup.open({ items: { src: "<div class='error-popup'><H4><strong>ERROR</strong></H4><P>Both numbers must be the same length</p></div>", type: "inline" }, closeOnContentClick: !0 }), e.value = "", e.focus(), document.InputForm.CallPark.checked = !1) } } else ErrorPopup("Call park values must be numeric beginning with either * or # or 1 through 9.  Total length must be 9 characters or less."), e.value = "", e.focus(), document.InputForm.CallPark.checked = !1 } } function CheckE164(e) { var t = e.value, l = /^\+?\d{4,15}$/; return null != t.match(l) || "" == t || null == t || "Number to show" == t ? (t = t.match(l), e.style.border = "1px solid #ccc", document.InputForm.BlockCallID.checked = !0, !0) : (e.style.border = "2px solid red", $.magnificPopup.open({ items: { src: "<div class='error-popup'><H4><strong>ERROR</strong></H4><P>Value can only contain digits and can be between 4 and 15 digits in length. May start with +.\n</p></div>", type: "inline" }, closeOnContentClick: !0 }), e.value = "", e.focus(), document.InputForm.BlockCallID.checked = !1, !1) } function CheckExtNum(e) { var t = e.value; if ("" != t) { var l = /^[*#]?\d{1,4}$/; return null != t.match(l) ? (t = t.match(l), e.style.border = "1px solid #ccc", !0) : (e.style.border = "2px solid red", ErrorPopup("Value must be between 1 and 4 digits long, and may start with either a * or #"), e.value = "", e.focus(), !1) } e.style.border = "1px solid #ccc" } function ChangeFontNormal(e) { null != e.value.match(/^\D+$/) && (e.style.color = "black", e.style.fontStyle = "normal", e.focus(), e.select()) } function CheckEmail() { var e = document.InputForm.Email; return "" != e.value && null == e.value.toUpperCase().match(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}$/) ? (e.style.border = "2px solid red", ErrorPopup("Email address invalid."), e.value = "", !1) : (e.style.border = "1px solid #ccc", !0) } function CheckLogin(e) { WL.getSession() ? ($("#CreateRules").slideDown("slow"), document.getElementById("CreateRulesHeader").style.display = "", document.getElementById("StartCreating").style.visibility = "visible") : (e.innerHTML = "Sign in with your Microsoft ID to get started!", document.getElementById("UserFirstName").value = "", document.getElementById("UserLastName").value = "", document.getElementById("UserEmail").value = "", document.getElementById("ReportsButton").style.display = "none", document.getElementById("UserID").value = "", document.getElementById("UserID2").value = "", $("#CreateRules").slideUp("slow"), document.getElementById("CreateRulesHeader").style.display = "none", document.getElementById("StartCreating").style.visibility = "hidden") } function CheckNPANXX(e) { var t = e.value; if ("" != t) { var l = /^[2-9]\d{2}$/; null != t.match(l) ? (t = t.match(l), e.style.border = "1px solid #ccc", UpdateRuleBase(), UpdateSampleRule()) : (e.style.border = "2px solid red", ErrorPopup("Number must be between 200-999"), e.value = "", e.focus()) } } function CheckRuleName() { var e = document.InputForm.RuleBase.value, t = document.getElementById("CountryID").value, l = e.indexOf(t), n = e.indexOf(strRuleSuffix); if ("" != e) { var a = /^[A-Za-z0-9\u00C0-\u017F\-\_]*$/; null != e.match(a) ? e = e.match(a) : (ErrorPopup("Custom rule can only include letters, numbers, dashes or underscore characters."), document.InputForm.RuleBase.value = "", document.InputForm.RuleBase.focus(), document.getElementById("SampleRule").innerHTML = t + "-" + strSelectedRegion.replace(/[ \r\n]/gi, "") + "-" + strRuleSuffix), (0 == l || -1 != n) && $.magnificPopup.open({ items: { src: "<div class='warning-popup'><H4><strong>WARNING</strong></H4><P>Your custom rule name may not appear as intended. By design, the country prefix (" + t + "-) is hard-coded into all rules, as is the appropriate rule suffix (ie. '-National'). This custom rule will appear as '" + document.InputForm.Country.value + "-" + e + "-" + strRuleSuffix + "'.</p></div>", type: "inline" }, closeOnContentClick: !0 }) } else document.getElementById("SampleRule").innerHTML = t + "-" + strSelectedRegion.replace(/[ \r\n]/gi, "") + "-" + strRuleSuffix } function ErrorPopup(e) { $.magnificPopup.open({ items: { src: "<div class='error-popup'><H4><strong>ERROR</strong></H4><P>" + e + "</p></div>", type: "inline" }, closeOnContentClick: !0 }) } function iframeURLChange(e, t) { let l = document.getElementById("SubmitButton"); var n = null, a = function () { var a = e.contentWindow.location.href; a !== n && (t(a), n = a, "https://www.ucdialplans.com/" == a ? (l.disabled = !0, l.value = "Generating...") : "https://www.ucdialplans.com/process.aspx" == a && (l.value = "Generate Rules", l.disabled = !1)) }, r = function () { setTimeout(a, 0) }; function o() { e.contentWindow.removeEventListener("unload", r), e.contentWindow.addEventListener("unload", r) } e.addEventListener("load", function () { o(), a() }), o() } function popUp(e) { var t = "page" + new Date().getTime(); t = window.open(e, '" + id + "', "toolbar=0,scrollbars=1,location=0,directories=0,statusbar=0,menubar=0,dependent=0,resizable=1,width=950,height=900,left=200,top=20") } function QueryDB(e, t, l) { var n, a; return (n = new XMLHttpRequest).open("GET", "QueryDB.cshtml?Query=" + e + "&ID=" + t, l), n.setRequestHeader("X-Requested-With", "XMLHttpRequest"), n.onreadystatechange = function () { if (4 == n.readyState && 200 == n.status) return a = (a = n.responseText).replace(/^\s+|\s+$/g, "") }, n.send(), a = a.replace(/^\s+|\s+$/g, "") } function RemoveAccent(e) { for (var t = [{ re: /[\xC0-\xC6]/g, ch: "A" }, { re: /[\xE0-\xE6]/g, ch: "a" }, { re: /[\xC8-\xCB]/g, ch: "E" }, { re: /[\xE8-\xEB]/g, ch: "e" }, { re: /[\xCC-\xCF]/g, ch: "I" }, { re: /[\xEC-\xEF]/g, ch: "i" }, { re: /[\xD2-\xD6]/g, ch: "O" }, { re: /[\xF2-\xF6]/g, ch: "o" }, { re: /[\xD9-\xDC]/g, ch: "U" }, { re: /[\xF9-\xFC]/g, ch: "u" }, { re: /[\xD1]/g, ch: "N" }, { re: /[\xF1]/g, ch: "n" }, { re: /[\u0100]/g, ch: "A" }, { re: /[\u0101]/g, ch: "a" }, { re: /[\u00C7]/g, ch: "C" }, { re: /[\u00E7]/g, ch: "c" }, { re: /[\u0112]/g, ch: "E" }, { re: /[\u0113]/g, ch: "e" }, { re: /[\u013B]/g, ch: "L" }, { re: /[\u013C]/g, ch: "l" }, { re: /[\u00D8]/g, ch: "O" }, { re: /[\u00F8]/g, ch: "o" }, { re: /[\u014C]/g, ch: "O" }, { re: /[\u014D]/g, ch: "o" }, { re: /[\u016A]/g, ch: "U" }, { re: /[\u016B]/g, ch: "u" }, { re: /[\u014E]/g, ch: "O" }, { re: /[\u014F]/g, ch: "o" }, { re: /[\u0160]/g, ch: "S" }, { re: /[\u0161]/g, ch: "s" }, { re: /[\u00DD]/g, ch: "Y" }, { re: /[\u00FD]/g, ch: "y" }, { re: /[\u017D]/g, ch: "Z" }, { re: /[\u017E]/g, ch: "z" }, { re: /[\xDF]/g, ch: "ss" }], l = 0, n = t.length; l < n; l++)e = e.replace(t[l].re, t[l].ch); return e } function ResetForm() { CheckLogin(eInfo), $(".CL_All").hide(), $(".CL_NANPA_Teams").show(), document.getElementById("Country").value = "NN", document.getElementById("CountryID").value = "US", document.getElementById("NANPA").value = "", document.getElementById("NANXX").value = "", document.getElementById("NANPADialing").value = "National", document.getElementById("NANPADialing").disabled = !1, document.getElementById("NANPADialing").options[1].disabled = !1, document.getElementById("RuleBase").value = "CA-BeverlyHills", document.getElementById("SampleRule").innerHTML = "US-CA-BeverlyHills-National", document.getElementById("GWType").value = "MSTeams", document.getElementById("ExtAccessNum").value = "", document.getElementById("SimpleRules").value = "No", document.getElementById("EnglishRules").value = "No", document.getElementById("EnglishRules_Text").style.display = "none", document.getElementById("SIPTrunk").value = "Yes", document.getElementById("BlockPrem").value = "No", document.getElementById("SevenDigit").value = "No", document.getElementById("Email").value = "", $("#RulesetOutputFrame").slideUp("slow"), strNational = "National", strAllCalls = "AllCalls", strSelectedRegion = "CA-BeverlyHills"; var e = 0; for (e = 0; e <= 49; e++)document.getElementById("ExtName" + e).value = "", document.getElementById("Base" + e).value = "", document.getElementById("Start" + e).value = "", document.getElementById("End" + e).value = "", document.getElementById("DID" + e).checked = !1 } function ResetOptions() { var e; document.getElementById("RuleBase").value = "", document.getElementById("ExtAccessNum").value = "", document.getElementById("NANPADialing").value = "National", document.getElementById("NANPADialing").options[1].disabled = !1, document.getElementById("SimpleRules").value = "No", document.getElementById("SIPTrunk").value = "Yes", document.getElementById("BlockPrem").value = "No", document.getElementById("CallParkStart").value = "Start", document.getElementById("CallParkEnd").value = "End", document.getElementById("CallParkStart").style.border = "1px solid #ccc", document.getElementById("CallParkEnd").style.border = "1px solid #ccc", document.getElementById("BlockCallIDCode").value = "Block ID code", document.getElementById("BlockCallIDRepl").value = "Number to show", document.getElementById("BlockCallIDCode").style.border = "1px solid #ccc", document.getElementById("BlockCallIDRepl").style.border = "1px solid #ccc", document.getElementById("SevenDigit").value = "No", document.getElementById("Email").value = "", $("#RulesetOutputFrame").slideUp("slow"), (e = new XMLHttpRequest).onreadystatechange = function () { 4 == e.readyState && 200 == e.status && (strOriginalRegion = strSelectedRegion = e.responseText.split(",")[1], "Yes" == document.getElementById("EnglishRules").value && (strRuleSuffix = "National", strSelectedRegion = RemoveAccent(strSelectedRegion)), strSelectedRegion = strSelectedRegion.replace(/[ \r\n]/gi, ""), document.getElementById("RuleBase").value = strSelectedRegion, document.getElementById("SampleRule").innerHTML = document.InputForm.CountryID.value + "-" + strSelectedRegion + "-" + strRuleSuffix) }, e.open("GET", "QueryDB.cshtml?Query=AreaCodeSelect&ID=" + document.InputForm.NPADrop.value, !0), e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.send() } function RNLookup() { var e = this.PhoneNum.value, t = new XMLHttpRequest; t.open("GET", "https://www.ucdialplans.com/rnlapi/?phonenumber=" + e), t.responseType = "json", t.send(), t.onload = function () { if (200 == t.status) { var e = t.response, l = "Country: " + e.data.countryname + "<BR>Country Code: " + e.data.countrycode; "" != e.data.city && (l = l + "<BR>City: " + e.data.city), "" != e.data.stateprov && (l = l + ", " + e.data.stateprov), "" != e.data.areacode && (l = l + "<BR>Area Code: " + e.data.areacode), l = l + "<BR>Number Type: " + e.data.type, "" != e.data.provider && (l = l + "<BR>Provider: " + e.data.provider), document.getElementById("RNLResults").innerHTML = l } else document.getElementById("RNLResults").innerHTML = "Invalid phone number" } } function UpdateFormData() { var e, t, l, n, a, r = document.InputForm.Country.value, o = document.getElementById("CarrierCode_Text"), s = document.InputForm.CarrierCode, u = document.getElementById("EnglishRules_Text"), d = document.InputForm.EnglishRules, c = document.getElementById("BlockPrem_Text"), p = document.InputForm.BlockPrem, g = document.InputForm.BlockCallIDCode, m = document.InputForm.BlockCallIDRepl, y = document.InputForm.CallParkStart, I = document.InputForm.CallParkEnd, B = document.InputForm.Email, E = document.getElementById("NPA_Text"), h = document.getElementById("NPADrop"), v = document.getElementById("NPAType"); $("#RulesetOutputFrame").slideUp("slow"), h.options.length = 0, document.InputForm.CountryID.value = document.InputForm.Country.value; var C = QueryDB("CountryInfo", r, !1).split(","), A = C[0], N = C[1], R = C[2], f = C[3]; switch (strNational = C[4], strAllCalls = C[5], strLangID = C[6].substr(0, 3), strRuleSuffix = strNational, document.InputForm.CountryCode.value = A, $(".CL_All").hide(), document.InputForm.GWType.value) { case "Skype4B": document.getElementById("Country").disabled = !1, "NN" == document.InputForm.Country.value ? $(".CL_NANPA_Lync").show() : $(".CL_NotNANPA_Lync").show(); break; case "MSTeams": document.getElementById("Country").disabled = !1, "NN" == document.InputForm.Country.value ? $(".CL_NANPA_Teams").show() : $(".CL_NotNANPA_Teams").show(); break; case "AudioCodes": case "Cisco": $(".CL_AudioCodes").show(), document.getElementById("Country").value = "NN", document.getElementById("CountryID").value = "US", document.getElementById("Country").disabled = !0; break; case "RawRegEx": $(".CL_Raw").show(), document.getElementById("Country").value = "NN", document.getElementById("CountryID").value = "US", document.getElementById("Country").disabled = !0 }"eng" == strLangID || "AudioCodes" == document.InputForm.GWType.value || "Cisco" == document.InputForm.GWType.value ? u.style.display = "none" : (u.style.display = "block", d.value = "No"), "Skype4B" == document.InputForm.GWType.value && (f > 0 ? (c.style.display = "", p.style.display = "") : (c.style.display = "none", p.style.display = "none", p.value = "No")), "NN" == document.InputForm.Country.value ? (document.getElementById("GWType").options[2].disabled = !1, document.getElementById("GWType").options[3].disabled = !1, document.getElementById("CountryID").value = "US", strSelectedRegion = "CA-BeverlyHills", strOriginalRegion = "CA-BeverlyHills", document.getElementById("SampleRule").innerHTML = "US-CA-BeverlyHills-" + strRuleSuffix, document.getElementById("RuleBase").value = "", document.getElementById("ExtAccessNum").value = "", document.getElementById("NANPADialing").value = "National", document.getElementById("NANPADialing").disabled = !1, document.getElementById("NANPADialing").options[1].disabled = !1, document.getElementById("SimpleRules").value = "No", document.getElementById("SIPTrunk").value = "Yes", document.getElementById("BlockPrem").value = "No", document.getElementById("SevenDigit").value = "No", B.style.border = "1px solid #ccc", document.getElementById("NANPA").style.border = "1px solid #ccc", document.getElementById("NANXX").style.border = "1px solid #ccc") : (document.getElementById("GWType").options[2].disabled = !0, document.getElementById("GWType").options[3].disabled = !0, 0 == R ? ("DE" == document.InputForm.Country.value && (document.InputForm.NPAType.value = "30"), "IN" == document.InputForm.Country.value && (document.InputForm.NPAType.value = "11"), "MX" == document.InputForm.Country.value && (document.InputForm.NPAType.value = "33"), "NZ" == document.InputForm.Country.value && (document.InputForm.NPAType.value = "92"), h.style.display = "", v.style.display = "", AreaCodeEntry()) : (h.style.display = "block", v.style.display = "none", (a = new XMLHttpRequest).onreadystatechange = function () { if (4 == a.readyState && 200 == a.status) { var r = (AreaCodeList = (AreaCodeList = a.responseText).replace(/^\s+|\s+$/g, "")).split("\n"); for (i = 0; i < r.length; i++)e = (n = r[i].split(","))[0], l = n[1], t = n[2], "0" == l ? (h.options[h.options.length] = new Option(t, e), h.style.display = "none", E.style.display = "none") : h.options[h.options.length] = new Option(l + " - " + t, e), 0 == i && (strOriginalRegion = strSelectedRegion = t.replace(/[ \r\n]/gi, ""), document.getElementById("SampleRule").innerHTML = document.InputForm.CountryID.value + "-" + strSelectedRegion + "-" + strRuleSuffix, document.getElementById("RuleBase").value = strSelectedRegion.replace(/[ \r\n]/gi, "")) } }, a.open("GET", "QueryDB.cshtml?Query=AreaCodes&ID=" + r, !0), a.setRequestHeader("X-Requested-With", "XMLHttpRequest"), a.send()), document.getElementById("NANPA").value = "", document.getElementById("NANXX").value = "", document.getElementById("NANPADialing").value = "", document.getElementById("RuleBase").value = "", document.getElementById("ExtAccessNum").value = "", document.getElementById("SimpleRules").value = "No", document.getElementById("SIPTrunk").value = "Yes", document.getElementById("BlockPrem").value = "No", document.getElementById("SevenDigit").value = "No", document.getElementById("Email").value = ""), y.style.display = "Start", I.style.display = "End", y.style.border = "1px solid #ccc", I.style.border = "1px solid #ccc", g.value = "Block ID code", m.value = "Number to show", g.style.border = "1px solid #ccc", m.style.border = "1px solid #ccc", "PreNatInt" == N || "PostNat" == N || "PostNatInt" == N || "PostNatMob" == N || "Int" == N || "PreInt" == N || "PostInt" == N ? (o.style.display = "block", s.style.display = "block", s.value = "") : (o.style.display = "none", s.style.display = "none", s.value = ""), "Int" == N ? document.getElementById("CarrierCode_Header").innerHTML = "International Prefix" : document.getElementById("CarrierCode_Header").innerHTML = "Carrier Code", "RawRegEx" == document.InputForm.GWType.value ? (document.getElementById("RulesetCol2").style.display = "none", document.getElementById("RulesetCol3").style.display = "none", document.getElementById("RulesetCol1").className = "col-md-4 col-md-offset-4") : (document.getElementById("RulesetCol2").style.display = "", document.getElementById("RulesetCol3").style.display = "", document.getElementById("RulesetCol1").className = "col-md-4"), UpdateRuleBase(), UpdateSampleRule() } function UpdateRuleBase() { var e = document.getElementById("NANPADialing"); if ("NN" == document.getElementById("Country").value) { var t = document.InputForm.NANPA.value, l = document.InputForm.NANXX.value; if (t > 200 && l > 199) { var n = QueryDB("NANPAPrefix", t + l, !1); if ("" != n) { var a = n.split(","), r = a[0], o = a[1].substr(0, 2); strSelectedRegion = o + "-" + (r = r.replace(/[:']/, "-")), "AB,BC,MB,NB,NL,NT,NS,NU,ON,PE,QC,SK,YT".indexOf(o) > -1 ? (document.getElementById("CountryID").value = "CA", e.options[1].disabled = !1) : "AL,AK,AS,AZ,AR,CA,CO,CT,DE,DC,FM,FL,GA,GU,HI,ID,IL,IN,IA,KS,KY,LA,ME,MH,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,MP,OH,OK,OR,PW,PA,PR,RI,SC,SD,TN,TX,UT,VT,VI,VA,WA,WV,WI,WY".indexOf(o) > -1 ? (document.getElementById("CountryID").value = "US", e.options[1].disabled = !1) : ("SA" == o && (o = "LC"), "TR" == o && (o = "TT"), "BD" == o && (o = "BB"), "BA" == o && (o = "BS"), "GN" == o && (o = "GD"), "SM" == o && (o = "SX"), document.getElementById("CountryID").value = o, strSelectedRegion = r, e.options[1].disabled = !0, "USCan" == e.value && (e.value = "National")) } else strSelectedRegion = "UNKNOWN" } else strSelectedRegion = "UNKNOWN" } "Yes" == document.getElementById("EnglishRules").value && (strSelectedRegion = RemoveAccent(strSelectedRegion)), document.getElementById("RuleBase").value = strSelectedRegion.replace(/[ \r\n]/gi, "") } function UpdateSampleRule() { "No" == document.getElementById("SimpleRules").value ? (document.getElementById("NANPADialing").disabled = !1, "No" == document.getElementById("EnglishRules").value ? strRuleSuffix = strNational : (strRuleSuffix = "National", document.getElementById("RuleBase").value = RemoveAccent(document.getElementById("RuleBase").value))) : (document.getElementById("NANPADialing").value = "All", document.getElementById("NANPADialing").disabled = !0, strRuleSuffix = "No" == document.getElementById("EnglishRules").value ? strAllCalls : "AllCalls"), document.getElementById("RuleBase").value.match(/^[\p{L}\d\-]{1,50}$/gu) ? document.getElementById("SampleRule").innerHTML = document.getElementById("CountryID").value + "-" + document.getElementById("RuleBase").value.replace(/[ \r\n]/gi, "") + "-" + strRuleSuffix : (ErrorPopup("Rulename base can only contain letters, numbers and dashes"), document.getElementById("RuleBase").focus()) } function ValidateForm() { var e, t = document.InputForm.Country.value, l = document.InputForm.NANPA, n = document.InputForm.NPADrop.value, a = document.InputForm.NANXX; document.InputForm.ExtAccessNum.value; var r = !0, o = "<ul>"; WL.getSession() || (o += "<li>You must be signed in with a Microsoft Account before generating the script. Please sign in using the button on the top of the page. </li>", r = !1), (e = new XMLHttpRequest).onreadystatechange = function () { if (4 == e.readyState && 200 == e.status) { var t = e.responseText, l = t.split(","); t = l[1]; var n = parseInt(l[2]); "" == t && n > 39 && $.magnificPopup.open({ items: { src: "<div class='warning-popup'><H4><strong>WARNING</strong></H4><P>It appears that you've created " + n + " rulesets with UCDialPlans.com and have never donated. It takes a lot of effort to make this site and to keep improving it. Please consider donating by clicking the PayPal link at the bottom of the page.</P><P><form style='margin-left: 5.5em;' action='https://www.paypal.com/cgi-bin/webscr' method='post'><input type='hidden' name='cmd' value='_s-xclick'><input type='hidden' name='encrypted' value='-----BEGIN PKCS7-----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-----END PKCS7-----'><input type='image' style='width: 15em; height: auto;' src='https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif' border='none' name='PayPal' alt='PayPal - The safer, easier way to pay online!'><img alt='' border='none' src='https://www.paypalobjects.com/en_US/i/scr/pixel.gif' width='1' height='1'></form></p></div>", type: "inline" }, closeOnContentClick: !1 }) } }, e.open("GET", "QueryDB.cshtml?Query=DonationCount&ID=" + document.InputForm.UserID.value, !0), e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.send(), "NN" === t && ((null == l.value || "" == l.value) && (l.style.border = "2px solid red", o += "<li>NPA must be a numeric value between 201-999.</li>", r = !1), (null == a.value || "" == a.value) && (a.style.border = "2px solid red", o += "<li>NXX must be a numeric value between 200-999.</li>", r = !1)); var s = document.InputForm.CallParkStart.value, u = document.InputForm.CallParkEnd.value; if ("" != s && "Start" != s || "" != u && "End" != u) { var d = /^(([\*|#]?[1-9]\d{0,7})|([1-9]\d{0,8}))$/; if (null == s.match(d) || null == u.match(d)) o += "<li>Call park values must be numeric beginning with either * or # or 1 through 9.  Total length must be 9 characters or less.</li>", document.InputForm.CallPark.checked = !1, r = !1; else { d = /\d+/; var c = s.match(d), p = u.match(d); s.length != u.length || c.toString().length != p.toString().length || p - c <= 0 ? (o += "<li>Both Call Park start and end values must be the same length and the beginning of the range must be less than the end of the range.</li>", document.InputForm.CallParkStart.style.border = "2px solid red", document.InputForm.CallParkEnd.style.border = "2px solid red", document.InputForm.CallPark.checked = !1, r = !1) : (d = /[\*|#]/, null != s.match(d) && null != u.match(d) && (s.match(d).toString() != u.match(d).toString() ? (o += "<li>Both Call Park start and end values must start with the same character (either # or *).</li>", document.InputForm.CallParkStart.style.border = "2px solid red", document.InputForm.CallParkEnd.style.border = "2px solid red", document.InputForm.CallPark.checked = !1, r = !1) : c < 100 && (o += "<li>If Call Park range starts with * or #, range must start at 100 or higher.</li>", document.InputForm.CallParkStart.style.border = "2px solid red", document.InputForm.CallParkEnd.style.border = "2px solid red", document.InputForm.CallPark.checked = !1, r = !1))) } } "No Area Code Found" == n && (o += "<li>No area code found. Program cannot continue without a valid area code.</li>", r = !1); var g = document.InputForm.BlockCallIDCode.value, m = document.InputForm.BlockCallIDRepl.value; if ("" != g && "Block ID code" != g || "" != m && "Number to show" != m ? ("" == document.InputForm.BlockCallIDCode.value || "" == document.InputForm.BlockCallIDRepl.value || "Block ID code" == document.InputForm.BlockCallIDCode.value || "Number to show" == document.InputForm.BlockCallIDRepl.value) && (o += "<li>Block Caller ID input fields must both contain valid values.</li>", document.InputForm.BlockCallIDCode.style.border = "2px solid red", document.InputForm.BlockCallIDRepl.style.border = "2px solid red", document.InputForm.BlockCallID.checked = !1, r = !1) : document.InputForm.BlockCallID.checked = !1, !1 == CheckEmail && (r = !1), !1 == r) return ErrorPopup(o), !1; { let y = document.getElementById("StatusArea"); y.contentWindow.document.open(), y.contentWindow.document.write("<head><style>h3{color:#12A5F4;text-align:center; font-size: 12pt; font-family: Arial, Helvetica, Geneva, SunSans-Regular, sans-serif;}</style></head><body><h3><p>Processing. Please wait...</p></h3></body>"), y.contentWindow.document.close(), $("#RulesetOutputFrame").slideDown("slow") } } function Verify7Digit() { "Yes" == document.InputForm.SevenDigit.value && $.magnificPopup.open({ items: { src: '<div class="warning-popup"><H4><strong>WARNING</strong></H4><P>If you select this option and the selected NPA/NXX does not allow 7-digit dialing, this program will produce normalization rules that will function incorrectly.</P></div>', type: "inline" }, closeOnContentClick: !0 }) } window.addEventListener("load", ResetForm), document.getElementById("signin").addEventListener("change", function () { CheckLogin(eInfo) }), document.getElementById("UserHistoryForm").addEventListener("submit", function () { history_popup(document.getElementById("UserHistoryForm")) }), document.getElementById("ReportsForm").addEventListener("submit", function () { report_popup(document.getElementById("ReportsForm")) }), document.getElementById("InputForm").addEventListener("submit", function () { return ValidateForm() }), document.querySelectorAll(".update-form-data").forEach(e => { e.addEventListener("change", UpdateFormData) }), document.querySelectorAll(".check-npa-nxx").forEach(e => { e.addEventListener("change", function () { CheckNPANXX(e) }) }), document.querySelectorAll(".update-sample-rule").forEach(e => { e.addEventListener("change", UpdateSampleRule) }), document.querySelectorAll(".reset-options").forEach(e => { e.addEventListener("change", ResetOptions) }), document.getElementById("NPAType").addEventListener("blur", AreaCodeEntry), document.getElementById("RuleBase").addEventListener("change", UpdateSampleRule), document.getElementById("RuleBase").addEventListener("blur", UpdateSampleRule), document.getElementById("CarrierCode").addEventListener("change", function () { CheckAccessCode(document.InputForm.CarrierCode) }), document.getElementById("SevenDigit").addEventListener("change", Verify7Digit), document.getElementById("Email").addEventListener("change", CheckEmail), document.getElementById("ExtAccessNum").addEventListener("change", function () { CheckExtNum(document.InputForm.ExtAccessNum) }), document.getElementById("BlockCallIDCode").addEventListener("change", function () { CheckCallID(document.InputForm.BlockCallIDCode) }), document.getElementById("BlockCallIDRepl").addEventListener("change", function () { CheckE164(document.InputForm.BlockCallIDRepl) }), document.querySelectorAll(".change-font-normal").forEach(e => { e.addEventListener("focus", function () { ChangeFontNormal(e) }) }), iframeURLChange(document.getElementById("StatusArea"), function (e) { }), document.getElementById("CallParkStart").addEventListener("change", function () { CheckCallPark(document.InputForm.CallParkStart, document.InputForm.CallParkEnd) }), document.getElementById("CallParkEnd").addEventListener("change", function () { CheckCallPark(document.InputForm.CallParkEnd, document.InputForm.CallParkStart) }), document.getElementById("ExtensionsButton").addEventListener("click", function () { popUp("extensionentry.htm") }), document.getElementById("RNLButton").addEventListener("click", function () { return RNLookup() }), document.getElementById("RNLUpdateButton").addEventListener("click", function () { return RNLUpdate() }), document.getElementById("RegexRange_Button").addEventListener("click", function () { return CalcRegexRange() }), document.getElementById("hoff").addEventListener("click", function () { document.getElementById("oldsite").style.display = "" }), $(document).ready(function () { $('[data-toggle="popover"]').popover({ placement: "top", container: "body", html: !0 }) });