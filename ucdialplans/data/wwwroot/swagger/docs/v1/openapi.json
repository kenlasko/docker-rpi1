{
  "openapi" : "3.0.2",
  "info" : {
    "title" : "UCDialPlans APIs",
    "description" : "A series of APIs that can be used for various telephony purposes. Includes APIs for determining call classes, reverse number lookup and regex range calculation. Requires a valid APIKey to run. You can use **abc1234567890xyz** for testing purposes.",
    "termsOfService" : "https://www.ucdialplans.com/termsofservice.htm",
    "contact" : {
      "name" : "UCDialPlans",
      "url" : "https://www.ucdialplans.com",
      "email" : "klasko@ucdialplans.com"
    },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://www.ucdialplans.com"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ "apikey" ]
  } ],
  "paths" : {
    "/queryapi" : {
      "get" : {
        "tags" : [ "Dialplan Query" ],
        "summary" : "Obtain regex for dialplan entries",
        "description" : "Use the UCDialPlans Query API to programatically access the low-level dial rules for every country in the world. Create your own custom dial plan deployment scripts, manage billing, or enhance an existing application with the information that is trusted by thousands of customers around the world. Using the **abc1234567890xyz** test API key will return obfuscated results.",
        "operationId" : "Dialplan Data",
        "parameters" : [ {
          "name" : "countrycode",
          "in" : "query",
          "description" : "**Numeric Country Code (1-3 digits)**. *Example: `44`*. The ITU defined numeric country code for the desired country. See https://www.ucdialplans.com/CountryListAlpha.cshtml for a complete list.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 999,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "npa",
          "in" : "query",
          "description" : "**NANPA Area Code**. *Example: `212`*. The 3-digit area code you want to get a dialplan for. **Required for North America country code (+1).**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 999,
            "minimum" : 200,
            "type" : "integer"
          }
        }, {
          "name" : "nxx",
          "in" : "query",
          "description" : "**NANPA Number Exchange**. *Example: `343`*. The first 3 digits after the North America area code. **Required for North America country code (+1).**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 999,
            "minimum" : 200,
            "type" : "integer"
          }
        }, {
          "name" : "natscope",
          "in" : "query",
          "description" : "**NANPA National Scope**. Defines whether to classify area codes outside the selected country as national or international. Possible values:  `national` - only area codes within the selected country are treated as national.  `uscan` - all area codes in US/Canada are treated as national. `all` - all NANPA area codes (including Caribbean) are treated as national. **Only valid for North America country code (+1).**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "national", "uscan", "all" ]
          }
        }, {
          "name" : "sevendigit",
          "in" : "query",
          "description" : "**NANPA Allow 7-Digit Dialing**. Creates regex that allows 7-digit dialing for the selected locaiton. Possible values: `yes/no`, `true/false`, `1/0` **Only valid for North America country code (+1).**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "yes", "no", "true", "false", "1", "0" ]
          }
        }, {
          "name" : "areacode",
          "in" : "query",
          "description" : "The area code to return a dialplan for. 1-6 digits. **Required for most non-NANPA countries (country code other than +1)**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carriercode",
          "in" : "query",
          "description" : "If the selected country requires a carrier code, enter it here. The output will insert the carrier code in the appropriate location in the dialplan string. 1-3 digits. **Only used for non-NANPA countries (country code other than +1)**",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Invalid or missing country or area code",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Invalid API key",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Weather not found",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          }
        }
      }
    },
    "/rnlapi" : {
      "get" : {
        "tags" : [ "Reverse Number Lookup" ],
        "summary" : "Find the location of any phone number in the world",
        "description" : "Enter a phone number and the API will return the country, city and number type for nearly every country in the world.",
        "operationId" : "Reverse Number Lookup",
        "parameters" : [ {
          "name" : "phonenumber",
          "in" : "query",
          "description" : "**Numeric phone number (5 to 18 digits) in E.164 format.**. *Example: `44201234567` or `+44201234567`*.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Invalid starting point",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Invalid API key",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Not found",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          }
        }
      }
    },
    "/regexrangeapi" : {
      "get" : {
        "tags" : [ "Regex Range Calculator" ],
        "summary" : "Calculate regex for a numeric range of numbers",
        "description" : "Creates regex for any range of numbers.",
        "operationId" : "Regex Range Calculator",
        "parameters" : [ {
          "name" : "first",
          "in" : "query",
          "description" : "**First number in range**",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "**Last number in range** Must be larger than the first number and have the same number of digits.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Invalid range",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "title" : "Invalid API key",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Not found",
                  "type" : "string",
                  "example" : "Not found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Sample" : {
        "type" : "object",
        "properties" : {
          "placeholder" : {
            "type" : "string",
            "description" : "Placeholder description"
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "name" : "apikey",
        "in" : "query"
      }
    }
  }
}